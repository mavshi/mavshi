9 Construct a bank app to display different menu like windrow, deposite etc. 

Activity_main.xml



<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical"
tools:context=".MainActivity">
<!--heading text view-->
<TextView
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_margin="20dp"
android:text="IFSC Code Validator"
android:textAlignment="center"
android:textColor="@color/purple_500"
android:textSize="30sp" />
<!-- edit text for entering our IFSC code
we are specifying input type as number
and we are also mentioning our input type
as textcapCharacters because IFSC code is
having all capital characters-->
<EditText
android:id="@+id/idedtIfscCode"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_margin="20dp"
android:hint="Enter IFSC code"
android:importantForAutofill="no"
android:inputType="textCapCharacters"
android:maxLines="1"
android:singleLine="true"
android:textAllCaps="true" />
<Button
android:id="@+id/idBtnGetBankDetails"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_gravity="center_horizontal"
android:layout_marginTop="50dp"
android:text="Get Bank Details"
android:textAllCaps="false" />
<EditText
android:id="@+id/idedtIfscCode1"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_margin="20dp"
android:hint="windrow"
android:importantForAutofill="no"
android:inputType="textCapCharacters"
android:maxLines="1"
android:singleLine="true"
android:textAllCaps="true" />
<!--button to get the data from IFSC code-->
<Button
android:id="@+id/idBtnGetBankDetails1"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_gravity="center_horizontal"
android:layout_marginTop="50dp"
android:text="Get Bank windrow"
android:textAllCaps="false" />
<EditText
android:id="@+id/idedtIfscCode2"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_margin="20dp"
android:hint="deposite"
android:importantForAutofill="no"
android:inputType="textCapCharacters"
android:maxLines="1"
android:singleLine="true"
android:textAllCaps="true" />
<!--button to get the data from IFSC code-->
<Button
android:id="@+id/idBtnGetBankDetails2"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_gravity="center_horizontal"
android:layout_marginTop="50dp"
android:text="Get Money Deposite Bank "
android:textAllCaps="false" />
<!--text view to display the
data received from IFSC code-->
<TextView
android:id="@+id/idTVBankDetails"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_margin="20dp"
android:padding="10dp"
android:textAlignment="center"
android:textAllCaps="false"
android:textColor="@color/purple_500"
android:textSize="15sp" />
</LinearLayout>


MainActivity.java


package com.example.bank;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import org.json.JSONException;
import org.json.JSONObject;
public class MainActivity extends AppCompatActivity {
// creating variables for edit text
// and our text views.
private EditText ifscCodeEdt;
private TextView bankDetailsTV;
// creating a variable for
// our ifsc code string.
String ifscCode;
// creating a variable for request queue.
private RequestQueue mRequestQueue;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
// initializing our variables.
ifscCodeEdt = findViewById(R.id.idedtIfscCode);
Button getBankDetailsBtn = findViewById(R.id.idBtnGetBankDetails);
bankDetailsTV = findViewById(R.id.idTVBankDetails);
// initializing our request queue variable with request queue
// and passing our context to it.
mRequestQueue = Volley.newRequestQueue(MainActivity.this);
// initializing on click listener for our button.
getBankDetailsBtn.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
// getting string from edittext.
ifscCode = ifscCodeEdt.getText().toString();
// validating if the edit text
// is empty or not.
if (TextUtils.isEmpty(ifscCode)) {
// displaying a toast message if the text field is
empty
Toast.makeText(MainActivity.this, "Please enter valid
IFSC code", Toast.LENGTH_SHORT).show();
} else {
// calling a method to display
// our ifsc code details.
getDataFromIFSCCode(ifscCode);
}
}
});
}
private void getDataFromIFSCCode(String ifscCode) {
// clearing our cache of request queue.
mRequestQueue.getCache().clear();
// below is the url from where we will be getting
// our response in the json format.
String url = "http://api.techm.co.in/api/v1/ifsc/" + ifscCode;
// below line is use to initialize our request queue.
RequestQueue queue = Volley.newRequestQueue(MainActivity.this);
// creating a json object request for our API.
JsonObjectRequest objectRequest = new
JsonObjectRequest(Request.Method.GET, url, null, new
Response.Listener<JSONObject>() {
@Override
public void onResponse(JSONObject response) {
// this method is used to get
// the response from the API.
try {
if (response.getString("status").equals("failed")) {
// checking if the response is not loaded and
// status for the repose is fail.
// if response status is failure we are displaying
// an invalid IFSC code in our text view.
bankDetailsTV.setText("Invalid IFSC Code");
} else {
// if the status is successful we are
// extracting data from JSON file
JSONObject dataObj =
response.getJSONObject("data");
String state = dataObj.optString("STATE");
String bankName = dataObj.optString("BANK");
String branch = dataObj.optString("BRANCH");
String address = dataObj.optString("ADDRESS");
String contact = dataObj.optString("CONTACT");
String micrcode = dataObj.optString("MICRCODE");
String city = dataObj.optString("CITY");
// after extracting this data we are displaying
// that data in our text view.
bankDetailsTV.setText("Bank Name : " + bankName +
"\nBranch : " + branch + "\nAddress : " + address + "\nMICR Code : " +
micrcode + "\nCity : " + city + "\nState : " + state + "\nContact : " +
contact);
}
} catch (JSONException e) {
// if we get any error while loading data
// we are setting our text as invalid IFSC code.
e.printStackTrace();
bankDetailsTV.setText("Invalid IFSC Code");
}
}
}, new Response.ErrorListener() {
@Override
public void onErrorResponse(VolleyError error) {
// if we get any error while loading json
// data we are setting our text to invalid IFSC code.
bankDetailsTV.setText("Invalid IFSC Code");
}
});
// below line is use for adding object
// request to our request queue.
queue.add(objectRequest);
}
}
